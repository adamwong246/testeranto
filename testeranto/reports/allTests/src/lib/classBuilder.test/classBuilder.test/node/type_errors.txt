/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.mock.ts (44,56): Type 'never[]' is not assignable to type 'number'.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.types.ts (3,10): Module '"./baseBuilder.test.mock"' has no exported member 'TestBaseBuilder'.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.types.ts (7,3): Cannot find name 'BaseBuilder'.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.types.ts (8,3): Cannot find name 'BaseBuilder'.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.types.ts (9,3): Cannot find name 'BaseBuilder'.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.types.ts (10,9): Cannot find name 'BaseBuilder'.
/Users/adam/Code/testeranto/src/lib/basebuilder.ts (85,15): This expression is not callable.
  Not all constituents of type 'void | ((fPath: any, value: string | Buffer<ArrayBufferLike> | PassThrough) => void)' are callable.
    Type 'void' has no call signatures.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/mock.ts (41,9): Property 'andWhen' in type 'MockWhen' is not assignable to the same property in base type 'BaseWhen<I>'.
  Types of parameters 'whenCB' and 'whenCB' are incompatible.
    Type '(store: TestStore) => Promise<TestSelection>' is not assignable to type 'Promise<TestStore>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/mock.ts (52,9): Property 'butThen' in type 'MockThen' is not assignable to the same property in base type 'BaseThen<I>'.
  Types of parameters 'thenCB' and 'thenCB' are incompatible.
    Type 'Promise<BaseSuite<any, any>>' is not assignable to type 'Promise<TestSelection>'.
      Property 'testSelection' is missing in type 'BaseSuite<any, any>' but required in type 'TestSelection'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/mock.ts (85,13): Type 'MockWhen' is not assignable to type 'BaseWhen<I>'.
  Types of property 'andWhen' are incompatible.
    Types of parameters 'whenCB' and 'whenCB' are incompatible.
      Type '(store: TestStore) => Promise<TestSelection>' is not assignable to type 'Promise<TestStore>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/mock.ts (86,15): Type 'Promise<{ testStore: boolean; }>' is not assignable to type '(store: TestStore) => Promise<TestSelection>'.
  Type 'Promise<{ testStore: boolean; }>' provides no match for the signature '(store: TestStore): Promise<TestSelection>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/mock.ts (91,15): Type 'Promise<{ testSelection: boolean; }>' is not assignable to type 'Promise<(store: TestStore) => Promise<TestSelection>>'.
  Type '{ testSelection: boolean; }' is not assignable to type '(store: TestStore) => Promise<TestSelection>'.
    Type '{ testSelection: boolean; }' provides no match for the signature '(store: TestStore): Promise<TestSelection>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (58,14): Type '(Suite: ITestSpecification<I, O>, Given: WhenSpecification<I, O>, When: WhenSpecification<I, O>, Then: WhenSpecification<I, O>, Check: ITestCheckCallback<I, O>) => any[]' is not assignable to type 'ITestSpecification<I, O>'.
  Types of parameters 'Suite' and 'Suite' are incompatible.
    Type 'SuiteSpecification<I, O>' is not assignable to type 'ITestSpecification<I, O>'.
      Type 'SuiteSpecification<I, O>' provides no match for the signature '(Suite: SuiteSpecification<I, O>, Given: GivenSpecification<I, O>, When: WhenSpecification<I, O>, Then: ThenSpecification<...>, Check: ITestCheckCallback<...>): BaseSuite<...>[]'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (65,9): Property 'Default' does not exist on type 'ITestSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (69,29): Property 'Default' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (73,16): Property 'SuiteNameMatches' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (74,16): Property 'SuiteIndexMatches' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (75,16): Property 'FeaturesIncludes' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (80,24): Property 'Default' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (83,15): Property 'StoreValid' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (83,34): Property 'NoErrorsOccurred' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (83,59): Property 'AllChecksCompleted' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (87,31): Property 'Default' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (89,15): Property 'AddFeature' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (91,16): Property 'FeaturesIncludes' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (92,16): Property 'FeaturesIncludes' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (93,16): Property 'FeatureCountMatches' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (98,28): Property 'Default' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (100,15): Property 'RunSuiteWithError' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (102,16): Property 'ErrorCountMatches' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (120,9): Property 'Default' does not exist on type 'ITestSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (121,26): Property 'Default' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (124,14): Property 'addArtifact' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (125,14): Property 'modifySpecs' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (126,14): Property 'modifyJobs' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (129,14): Property 'specsModified' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (130,14): Property 'jobsModified' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (131,14): Property 'artifactsTracked' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (132,14): Property 'testRunSuccessful' does not exist on type 'WhenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (145,31): Type 'MockSuite' is not assignable to type '() => Promise<TestStore>'.
  Type 'MockSuite' provides no match for the signature '(): Promise<TestStore>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (151,7): Type '(suite: MockSuite) => Promise<MockSuite>' is not assignable to type '(zel: TestSelection, tr: ITTestResourceConfiguration, utils: PM) => Promise<(store: TestStore) => Promise<TestStore>>'.
  Types of parameters 'suite' and 'zel' are incompatible.
    Type 'TestSelection' is missing the following properties from type 'MockSuite': name, givens, checks, store, and 10 more.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (171,11): Type '() => void' is not assignable to type '((selector: string) => boolean) | ((selector: string) => boolean) | ((selector: string, page: string) => Promise<unknown>)'.
  Type '() => void' is not assignable to type '(selector: string) => boolean'.
    Type 'void' is not assignable to type 'boolean'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (173,11): Type '() => void' is not assignable to type '((p: any) => string) | ((p: any) => string) | ((p: any) => Promise<unknown>)'.
  Type '() => void' is not assignable to type '(p: any) => string'.
    Type 'void' is not assignable to type 'string'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (178,11): Argument of type 'null' is not assignable to parameter of type 'typeof BaseSuite'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (192,13): Argument of type 'null' is not assignable to parameter of type 'typeof BaseSuite'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (239,5): Type '(feature: string) => ((suite: MockSuite) => MockSuite)' is not assignable to type '(feature: string) => (ssel: TestSelection, utils: PM) => (store: TestStore) => Promise<TestSelection>'.
  Type '(suite: MockSuite) => MockSuite' is not assignable to type '(ssel: TestSelection, utils: PM) => (store: TestStore) => Promise<TestSelection>'.
    Types of parameters 'suite' and 'ssel' are incompatible.
      Type 'TestSelection' is missing the following properties from type 'MockSuite': name, givens, checks, store, and 10 more.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (260,58): Type '(suite: MockSuite) => MockSuite' is not assignable to type '(ssel: TestSelection, utils: PM) => (store: TestStore) => Promise<TestSelection>'.
  Types of parameters 'suite' and 'ssel' are incompatible.
    Type 'TestSelection' is missing the following properties from type 'MockSuite': name, givens, checks, store, and 10 more.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (319,5): Object literal may only specify known properties, and 'Default' does not exist in type 'TestCheckImplementation<I, O>'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (328,30): Type '() => Promise<TestStore>' is not assignable to type 'TestStore'.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (335,44): Expected 1 arguments, but got 2.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (342,48): Expected 1 arguments, but got 2.
/Users/adam/Code/testeranto/src/lib/BaseSuite.test/test.ts (344,3): Type '(store: I["istore"]) => I["istore"]' is not assignable to type '(store: TestStore, key: string, pm: IPM) => Promise<unknown>'.
  Type 'TestStore' is missing the following properties from type 'Promise<unknown>': then, catch, finally, [Symbol.toStringTag]
/Users/adam/Code/testeranto/src/lib/classBuilder.test/classBuilder.test.implementation.ts (26,9): Argument of type 'typeof MockSuite' is not assignable to parameter of type 'ISuiteKlasser<I, O>'.
  Type 'typeof MockSuite' provides no match for the signature '(name: string, index: number, givens: IGivens<I>, checks: BaseCheck<I>[]): BaseSuite<I, O>'.
/Users/adam/Code/testeranto/src/lib/classBuilder.test/classBuilder.test.implementation.ts (40,9): Argument of type 'typeof (Anonymous class)' is not assignable to parameter of type 'ISuiteKlasser<I, O>'.
  Type 'typeof (Anonymous class)' provides no match for the signature '(name: string, index: number, givens: IGivens<I>, checks: BaseCheck<I>[]): BaseSuite<I, O>'.
/Users/adam/Code/testeranto/src/lib/classBuilder.test/classBuilder.test.implementation.ts (53,9): Argument of type 'typeof (Anonymous class)' is not assignable to parameter of type 'ISuiteKlasser<I, O>'.
  Type 'typeof (Anonymous class)' provides no match for the signature '(name: string, index: number, givens: IGivens<I>, checks: BaseCheck<I>[]): BaseSuite<I, O>'.
/Users/adam/Code/testeranto/src/lib/classBuilder.test/classBuilder.test.implementation.ts (66,9): Argument of type 'typeof (Anonymous class)' is not assignable to parameter of type 'ISuiteKlasser<any, any>'.
  Type 'typeof (Anonymous class)' provides no match for the signature '(name: string, index: number, givens: IGivens<any>, checks: BaseCheck<any>[]): BaseSuite<any, any>'.
/Users/adam/Code/testeranto/src/lib/classBuilder.test/classBuilder.test.implementation.ts (79,9): Argument of type 'typeof (Anonymous class)' is not assignable to parameter of type 'ISuiteKlasser<any, any>'.
  Type 'typeof (Anonymous class)' provides no match for the signature '(name: string, index: number, givens: IGivens<any>, checks: BaseCheck<any>[]): BaseSuite<any, any>'.
/Users/adam/Code/testeranto/src/lib/classBuilder.test/classBuilder.test.implementation.ts (113,32): Cannot find name 'TestClassBuilder'.
/Users/adam/Code/testeranto/src/lib/classBuilder.test/classBuilder.test.implementation.ts (190,30): Type '(builder: ClassBuilder<any, any, any>) => Promise<ClassBuilder<any, any, any>>' is not assignable to type '(builder: ClassBuilder<any, any, any>) => ClassBuilder<any, any, any>'.
  Type 'Promise<ClassBuilder<any, any, any>>' is missing the following properties from type 'ClassBuilder<any, any, any>': specs, assertThis, testResourceRequirement, artifacts, and 14 more.
/Users/adam/Code/testeranto/src/lib/classBuilder.test/classBuilder.test.implementation.ts (192,23): Property 'testRun' does not exist on type 'ClassBuilder<any, any, any>'.
/Users/adam/Code/testeranto/src/lib/classBuilder.test/classBuilder.test.implementation.ts (207,20): Type 'PassThrough' is not assignable to type '() => ClassBuilder<any, any, any>'.
  Type 'Transform' provides no match for the signature '(): ClassBuilder<any, any, any>'.
/Users/adam/Code/testeranto/src/lib/classBuilder.test/classBuilder.test.interface.ts (11,26): Expected 1 arguments, but got 2.
/Users/adam/Code/testeranto/src/lib/classBuilder.test/classBuilder.test.interface.ts (14,26): Expected 1 arguments, but got 2.
/Users/adam/Code/testeranto/src/lib/classBuilder.test/mock.ts (43,7): Argument of type 'ITestImplementation<I, O, M>' is not assignable to parameter of type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; checks: TestCheckImplementation<...>; }, keyof M> & M & { ...; }'.
  Type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; checks: TestCheckImplementation<...>; }, keyof M>' is missing the following properties from type '{ suites: Record<string, never>; givens: Record<string, any>; whens: Record<string, any>; thens: Record<string, any>; checks: Record<string, any>; }': suites, givens, whens, thens, checks
/Users/adam/Code/testeranto/src/lib/classBuilder.ts (92,18): A spread argument must either have a tuple type or be passed to a rest parameter.
/Users/adam/Code/testeranto/src/lib/classBuilder.ts (107,28): A spread argument must either have a tuple type or be passed to a rest parameter.
/Users/adam/Code/testeranto/src/lib/core.ts (46,7): Argument of type 'Omit<{ suites: import("/Users/adam/Code/testeranto/src/Types").TestSuiteImplementation<O>; givens: import("/Users/adam/Code/testeranto/src/Types").TestGivenImplementation<I, O>; whens: import("/Users/adam/Code/testeranto/src/Types").TestWhenImplementation<...>; thens: import("/Users/adam/Code/testeranto/src/Types")....' is not assignable to parameter of type 'Omit<{ suites: import("/Users/adam/Code/testeranto/src/Types").TestSuiteImplementation<O>; givens: import("/Users/adam/Code/testeranto/src/Types").TestGivenImplementation<I, O>; whens: import("/Users/adam/Code/testeranto/src/Types").TestWhenImplementation<...>; thens: import("/Users/adam/Code/testeranto/src/Types")....'.
  Type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; checks: TestCheckImplementation<...>; }, keyof M> & M & { ...; }' is not assignable to type '{ suites: Record<string, never>; givens: Record<string, any>; whens: Record<string, any>; thens: Record<string, any>; checks: Record<string, any>; }'.
    Types of property 'suites' are incompatible.
      Type 'Record<string, any>' is not assignable to type 'Record<string, never>'.
        'string' index signatures are incompatible.
          Type 'any' is not assignable to type 'never'.
/Users/adam/Code/testeranto/src/lib/index.ts (22,3): Type '(subject: T["isubject"], initialValues: T["iinitialValues"], x: unknown, testResource: ITTestResourceConfiguration, pm: IPM) => Promise<T["isubject"]>' is not assignable to type '(subject: T["isubject"], initializer: (c?: any) => T["given"], testResource: ITTestResourceConfiguration, initialValues: any, pm: IPM) => Promise<...>'.
  Types of parameters 'initialValues' and 'initializer' are incompatible.
    Type '(c?: any) => T["given"]' is not assignable to type 'T["iinitialValues"]'.
      'T["iinitialValues"]' could be instantiated with an arbitrary type which could be unrelated to '(c?: any) => T["given"]'.
/Users/adam/Code/testeranto/src/lib/index.ts (24,20): Type '"iinitialValues"' cannot be used to index type 'T'.
/Users/adam/Code/testeranto/src/lib/index.ts (46,13): This expression is not callable.
  Type 'unknown' has no call signatures.
/Users/adam/Code/testeranto/src/lib/index.ts (58,3): Type '{ assertThis?: ((x: T["then"]) => any) | undefined; andWhen?: ((store: T["istore"], whenCB: T["when"], testResource: ITTestResourceConfiguration, pm: IPM) => Promise<T["istore"]>) | undefined; ... 4 more ...; beforeEach?: ((subject: T["isubject"], initializer: (c?: any) => T["given"], testResource: ITTestResourceCon...' is not assignable to type 'ITestInterface<T>'.
  Types of property 'assertThis' are incompatible.
    Type '((x: T["then"]) => any) | undefined' is not assignable to type '(x: T["then"]) => any'.
      Type 'undefined' is not assignable to type '(x: T["then"]) => any'.
/Users/adam/Code/testeranto/src/Node.ts (34,7): Argument of type 'ITestImplementation<I, O, M>' is not assignable to parameter of type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; checks: TestCheckImplementation<...>; }, keyof M> & M & { ...; }'.
  Type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; checks: TestCheckImplementation<...>; }, keyof M>' is missing the following properties from type '{ suites: Record<string, any>; givens: Record<string, any>; whens: Record<string, any>; thens: Record<string, any>; checks: Record<string, any>; }': suites, givens, whens, thens, checks
/Users/adam/Code/testeranto/src/Node.ts (59,26): Cannot find name 'INodeTestInterface'. Did you mean 'ITestInterface'?
/Users/adam/Code/testeranto/src/PM/web.ts (56,12): Cannot find name 'opts'.
/Users/adam/Code/testeranto/src/PM/web.ts (57,57): Cannot find name 'opts'.
/Users/adam/Code/testeranto/src/PM/web.ts (59,7): Cannot find name 'page'. Did you mean the instance member 'this.page'?