/Users/adam/Code/testeranto/src/lib/abstractBase.ts (222,17): Catch clause variable type annotation must be 'any' or 'unknown' if specified.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.adapter.ts (8,49): Type 'Promise<{}>' is not assignable to type 'Promise<BaseBuilder<any, any, any, any, any, any>>'.
  Type '{}' is missing the following properties from type 'BaseBuilder<any, any, any, any, any, any>': specs, assertThis, testResourceRequirement, artifacts, and 12 more.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.adapter.ts (9,3): Type '(subject: import("/Users/adam/Code/testeranto/src/lib/basebuilder").BaseBuilder<any, any, any, any, any, any>, initializer: (c?: any) => () => import("/Users/adam/Code/testeranto/src/lib/basebuilder").BaseBuilder<any, any, any, any, any, any>, testResource: import("/Users/adam/Code/testeranto/src/lib/index").ITTestR...' is not assignable to type '(subject: import("/Users/adam/Code/testeranto/src/lib/basebuilder").BaseBuilder<any, any, any, any, any, any>, initializer: (c?: any) => () => import("/Users/adam/Code/testeranto/src/lib/basebuilder").BaseBuilder<any, any, any, any, any, any>, testResource: import("/Users/adam/Code/testeranto/src/lib/index").ITTestR...'. Two different types with this name exist, but they are unrelated.
  Type 'Promise<() => BaseBuilder<any, any, any, any, any, any>>' is not assignable to type 'Promise<BaseBuilder<any, any, any, any, any, any>>'.
    Type '() => BaseBuilder<any, any, any, any, any, any>' is not assignable to type 'BaseBuilder<any, any, any, any, any, any>'.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.adapter.ts (20,26): Expected 1 arguments, but got 2.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.adapter.ts (23,26): Expected 1 arguments, but got 2.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.adapter.ts (25,25): Type 'BaseBuilder<any, any, any, any, any, any>' is missing the following properties from type 'Promise<unknown>': then, catch, finally, [Symbol.toStringTag]
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.implementation.ts (19,5): Type '() => MockBaseBuilder<Ibdd_in_any, Ibdd_out_any, {}, {}, {}, {}>' is not assignable to type '() => () => BaseBuilder<any, any, any, any, any, any>'.
  Type 'MockBaseBuilder<Ibdd_in_any, Ibdd_out_any, {}, {}, {}, {}>' is not assignable to type '() => BaseBuilder<any, any, any, any, any, any>'.
    Type 'MockBaseBuilder<Ibdd_in_any, Ibdd_out_any, {}, {}, {}, {}>' provides no match for the signature '(): BaseBuilder<any, any, any, any, any, any>'.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.implementation.ts (31,57): Argument of type '{}' is not assignable to parameter of type 'ITTestResourceRequest'.
  Property 'ports' is missing in type '{}' but required in type 'ITTestResourceRequest'.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.implementation.ts (34,54): Argument of type '{}' is not assignable to parameter of type 'ITTestResourceRequest'.
  Property 'ports' is missing in type '{}' but required in type 'ITTestResourceRequest'.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.implementation.ts (43,25): Cannot find name 'ITestJob'.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.implementation.ts (50,32): Type '(builder: TestSubject) => TestSubject' is not assignable to type '(ssel: BaseBuilder<any, any, any, any, any, any>, utils: PM) => (store: any) => any'.
  Type 'TestSubject' is not assignable to type '(store: any) => any'.
    Type 'MockBaseBuilder<any, any, any, any, any, any>' provides no match for the signature '(store: any): any'.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.implementation.ts (54,100): Property 'constructor' does not exist on type 'never'.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.implementation.ts (75,27): Type '(builder: TestSubject) => TestSubject' is not assignable to type '(ssel: BaseBuilder<any, any, any, any, any, any>, utils: PM) => (store: any) => any'.
  Type 'TestSubject' is not assignable to type '(store: any) => any'.
    Type 'MockBaseBuilder<any, any, any, any, any, any>' provides no match for the signature '(store: any): any'.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.implementation.ts (81,24): Type '(builder: TestSubject) => TestSubject' is not assignable to type '(ssel: BaseBuilder<any, any, any, any, any, any>, utils: PM) => (store: any) => any'.
  Type 'TestSubject' is not assignable to type '(store: any) => any'.
    Type 'MockBaseBuilder<any, any, any, any, any, any>' provides no match for the signature '(store: any): any'.
/Users/adam/Code/testeranto/src/lib/baseBuilder.test/baseBuilder.test.specification.ts (18,16): Property 'artifactsTracked' does not exist on type 'ThenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/basebuilder.ts (79,15): This expression is not callable.
  Not all constituents of type 'void | ((fPath: string, value: string | Buffer<ArrayBufferLike> | PassThrough) => void)' are callable.
    Type 'void' has no call signatures.
/Users/adam/Code/testeranto/src/lib/classBuilder.ts (86,18): A spread argument must either have a tuple type or be passed to a rest parameter.
/Users/adam/Code/testeranto/src/lib/classBuilder.ts (101,28): A spread argument must either have a tuple type or be passed to a rest parameter.
/Users/adam/Code/testeranto/src/lib/core.ts (46,7): Argument of type 'Omit<{ suites: import("/Users/adam/Code/testeranto/src/Types").TestSuiteImplementation<O>; givens: import("/Users/adam/Code/testeranto/src/Types").TestGivenImplementation<I, O>; whens: import("/Users/adam/Code/testeranto/src/Types").TestWhenImplementation<...>; thens: import("/Users/adam/Code/testeranto/src/Types")....' is not assignable to parameter of type 'Omit<{ suites: import("/Users/adam/Code/testeranto/src/Types").TestSuiteImplementation<O>; givens: import("/Users/adam/Code/testeranto/src/Types").TestGivenImplementation<I, O>; whens: import("/Users/adam/Code/testeranto/src/Types").TestWhenImplementation<...>; thens: import("/Users/adam/Code/testeranto/src/Types")....'.
  Type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; }, keyof M> & M & { ...; }' is not assignable to type '{ suites: Record<string, never>; givens: Record<string, any>; whens: Record<string, any>; thens: Record<string, any>; }'.
    Types of property 'suites' are incompatible.
      Type 'Record<string, any>' is not assignable to type 'Record<string, never>'.
        'string' index signatures are incompatible.
          Type 'any' is not assignable to type 'never'.
/Users/adam/Code/testeranto/src/lib/index.ts (16,3): Type '(subject: T["isubject"], initialValues: T["iinitialValues"], x: unknown, testResource: ITTestResourceConfiguration, pm: IPM) => Promise<T["isubject"]>' is not assignable to type '(subject: T["isubject"], initializer: (c?: any) => T["given"], testResource: ITTestResourceConfiguration, initialValues: any, pm: IPM) => Promise<...>'.
  Types of parameters 'initialValues' and 'initializer' are incompatible.
    Type '(c?: any) => T["given"]' is not assignable to type 'T["iinitialValues"]'.
      'T["iinitialValues"]' could be instantiated with an arbitrary type which could be unrelated to '(c?: any) => T["given"]'.
/Users/adam/Code/testeranto/src/lib/index.ts (18,20): Type '"iinitialValues"' cannot be used to index type 'T'.
/Users/adam/Code/testeranto/src/lib/index.ts (40,13): This expression is not callable.
  Type 'unknown' has no call signatures.
/Users/adam/Code/testeranto/src/lib/index.ts (52,3): Type '{ assertThis?: ((x: T["then"]) => any) | undefined; andWhen?: ((store: T["istore"], whenCB: T["when"], testResource: ITTestResourceConfiguration, pm: IPM) => Promise<T["istore"]>) | undefined; ... 4 more ...; beforeEach?: ((subject: T["isubject"], initializer: (c?: any) => T["given"], testResource: ITTestResourceCon...' is not assignable to type 'ITestAdapter<T>'.
  Types of property 'assertThis' are incompatible.
    Type '((x: T["then"]) => any) | undefined' is not assignable to type '(x: T["then"]) => any'.
      Type 'undefined' is not assignable to type '(x: T["then"]) => any'.
/Users/adam/Code/testeranto/src/Node.ts (34,7): Argument of type 'ITestImplementation<I, O, M>' is not assignable to parameter of type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; }, keyof M> & M & { ...; }'.
  Type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; }, keyof M>' is missing the following properties from type '{ suites: Record<string, any>; givens: Record<string, any>; whens: Record<string, any>; thens: Record<string, any>; }': suites, givens, whens, thens
/Users/adam/Code/testeranto/src/PM/web.ts (56,12): Cannot find name 'opts'.
/Users/adam/Code/testeranto/src/PM/web.ts (57,57): Cannot find name 'opts'.
/Users/adam/Code/testeranto/src/PM/web.ts (59,7): Cannot find name 'page'. Did you mean the instance member 'this.page'?