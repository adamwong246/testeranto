/Users/adam/Code/testeranto/src/lib/basebuilder.ts (85,15): This expression is not callable.
  Not all constituents of type 'void | ((fPath: string, value: string | Buffer<ArrayBufferLike> | PassThrough) => void)' are callable.
    Type 'void' has no call signatures.
/Users/adam/Code/testeranto/src/lib/classBuilder.ts (90,18): A spread argument must either have a tuple type or be passed to a rest parameter.
/Users/adam/Code/testeranto/src/lib/classBuilder.ts (105,28): A spread argument must either have a tuple type or be passed to a rest parameter.
/Users/adam/Code/testeranto/src/lib/index.ts (22,3): Type '(subject: T["isubject"], initialValues: T["iinitialValues"], x: unknown, testResource: ITTestResourceConfiguration, pm: IPM) => Promise<T["isubject"]>' is not assignable to type '(subject: T["isubject"], initializer: (c?: any) => T["given"], testResource: ITTestResourceConfiguration, initialValues: any, pm: IPM) => Promise<...>'.
  Types of parameters 'initialValues' and 'initializer' are incompatible.
    Type '(c?: any) => T["given"]' is not assignable to type 'T["iinitialValues"]'.
      'T["iinitialValues"]' could be instantiated with an arbitrary type which could be unrelated to '(c?: any) => T["given"]'.
/Users/adam/Code/testeranto/src/lib/index.ts (24,20): Type '"iinitialValues"' cannot be used to index type 'T'.
/Users/adam/Code/testeranto/src/lib/index.ts (46,13): This expression is not callable.
  Type 'unknown' has no call signatures.
/Users/adam/Code/testeranto/src/lib/index.ts (58,3): Type '{ assertThis?: ((x: T["then"]) => any) | undefined; andWhen?: ((store: T["istore"], whenCB: T["when"], testResource: ITTestResourceConfiguration, pm: IPM) => Promise<T["istore"]>) | undefined; ... 4 more ...; beforeEach?: ((subject: T["isubject"], initializer: (c?: any) => T["given"], testResource: ITTestResourceCon...' is not assignable to type 'ITestInterface<T>'.
  Types of property 'assertThis' are incompatible.
    Type '((x: T["then"]) => any) | undefined' is not assignable to type '(x: T["then"]) => any'.
      Type 'undefined' is not assignable to type '(x: T["then"]) => any'.
/Users/adam/Code/testeranto/src/lib/pmProxy.test/implementation.ts (21,5): Type '(method: IProxiedFunctions, expectedPath: string) => (store: { butThenProxy: IProxy; }) => [string, string]' is not assignable to type '(It_0: IProxiedFunctions, It_1: string) => (ssel: { proxies: ITestProxies; filepath: string; mockPm: IPM; }, utils: PM) => [IPM, "string"]'.
  Type '(store: { butThenProxy: IProxy; }) => [string, string]' is not assignable to type '(ssel: { proxies: ITestProxies; filepath: string; mockPm: IPM; }, utils: PM) => [IPM, "string"]'.
    Types of parameters 'store' and 'ssel' are incompatible.
      Property 'butThenProxy' is missing in type '{ proxies: ITestProxies; filepath: string; mockPm: IPM; }' but required in type '{ butThenProxy: IProxy; }'.
/Users/adam/Code/testeranto/src/lib/pmProxy.test/implementation.ts (36,33): Property 'getLastCall' does not exist on type 'IPM'.
  Property 'getLastCall' does not exist on type 'PM_Pure'.
/Users/adam/Code/testeranto/src/lib/pmProxy.test/implementation.ts (40,33): Property 'getLastCall' does not exist on type 'IPM'.
  Property 'getLastCall' does not exist on type 'PM_Pure'.
/Users/adam/Code/testeranto/src/lib/pmProxy.test/implementation.ts (43,36): Type '"screen.png"' is not assignable to type '`${string}.webm`'.
/Users/adam/Code/testeranto/src/lib/pmProxy.test/implementation.ts (44,33): Property 'getLastCall' does not exist on type 'IPM'.
  Property 'getLastCall' does not exist on type 'PM_Pure'.
/Users/adam/Code/testeranto/src/lib/pmProxy.test/implementation.ts (47,42): Type '"shot.png"' is not assignable to type '`${string}.webm`'.
/Users/adam/Code/testeranto/src/lib/pmProxy.test/implementation.ts (48,33): Property 'getLastCall' does not exist on type 'IPM'.
  Property 'getLastCall' does not exist on type 'PM_Pure'.
/Users/adam/Code/testeranto/src/lib/pmProxy.test/implementation.ts (60,5): Type '(s: string) => string' is not assignable to type '() => [string, string]'.
  Target signature provides too few arguments. Expected 1 or more, but got 0.
/Users/adam/Code/testeranto/src/lib/pmProxy.test/index.ts (17,3): Argument of type 'ITestImplementation<I, O, M>' is not assignable to parameter of type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; checks: TestCheckImplementation<...>; }, never>'.
  The types returned by 'givens.SomeBaseString(...)' are incompatible between these types.
    Type 'string' is not assignable to type '[string, string]'.
/Users/adam/Code/testeranto/src/lib/pmProxy.test/interface.ts (11,3): Type '(subject: { proxies: import("/Users/adam/Code/testeranto/src/lib/pmProxy.test/index").ITestProxies; filepath: string; mockPm: import("/Users/adam/Code/testeranto/src/lib/types").IPM; }, initializer: (c?: any) => [...], testResource: import("/Users/adam/Code/testeranto/src/lib/index").ITTestResourceConfiguration, ini...' is not assignable to type '(subject: { proxies: import("/Users/adam/Code/testeranto/src/lib/pmProxy.test/index").ITestProxies; filepath: string; mockPm: import("/Users/adam/Code/testeranto/src/lib/types").IPM; }, initializer: (c?: any) => [...], testResource: import("/Users/adam/Code/testeranto/src/lib/index").ITTestResourceConfiguration, ini...'. Two different types with this name exist, but they are unrelated.
  Type 'Promise<{ proxies: ITestProxies; filepath: string; mockPm: IPM; }>' is not assignable to type 'Promise<{ butThenProxy: IProxy; }>'.
    Property 'butThenProxy' is missing in type '{ proxies: ITestProxies; filepath: string; mockPm: IPM; }' but required in type '{ butThenProxy: IProxy; }'.
/Users/adam/Code/testeranto/src/lib/pmProxy.test/interface.ts (22,3): Type '(store: { butThenProxy: import("/Users/adam/Code/testeranto/src/lib/pmProxy").IProxy; }, whenCB: (...args: any[]) => (proxies: { butThenProxy: import("/Users/adam/Code/testeranto/src/lib/pmProxy").IProxy; }) => { ...; }, testResource: import("/Users/adam/Code/testeranto/src/lib/index").ITTestResourceConfiguration, p...' is not assignable to type '(store: { butThenProxy: import("/Users/adam/Code/testeranto/src/lib/pmProxy").IProxy; }, whenCB: (...args: any[]) => (proxies: { butThenProxy: import("/Users/adam/Code/testeranto/src/lib/pmProxy").IProxy; }) => { ...; }, testResource: import("/Users/adam/Code/testeranto/src/lib/index").ITTestResourceConfiguration, p...'. Two different types with this name exist, but they are unrelated.
  Type 'Promise<(proxies: { butThenProxy: IProxy; }) => { butThenProxy: IProxy; }>' is not assignable to type 'Promise<{ butThenProxy: IProxy; }>'.
    Type '(proxies: { butThenProxy: IProxy; }) => { butThenProxy: IProxy; }' is not assignable to type '{ butThenProxy: IProxy; }'.
/Users/adam/Code/testeranto/src/lib/pmProxy.test/interface.ts (30,12): This expression is not callable.
  Type '[IPM, "string"]' has no call signatures.
/Users/adam/Code/testeranto/src/lib/pmProxy.test/interface.ts (35,3): Type '(input: any, testResource: any, pm: any, theGivenString: any) => Promise<{ beforeEachProxy: any; }>' is not assignable to type '(input: { butThenProxy: IProxy; }, testResource: ITTestResourceConfiguration, pm: IPM) => Promise<{ proxies: ITestProxies; filepath: string; mockPm: IPM; }>'.
  Target signature provides too few arguments. Expected 4 or more, but got 3.
/Users/adam/Code/testeranto/src/lib/pmProxy.test/interface.ts (44,3): Type '(returnedFilePath: any, expectation: any) => void' is not assignable to type '(x: [IPM, "string"]) => any'.
  Target signature provides too few arguments. Expected 2 or more, but got 1.
/Users/adam/Code/testeranto/src/Node.ts (34,7): Argument of type 'ITestImplementation<I, O, M>' is not assignable to parameter of type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; checks: TestCheckImplementation<...>; }, keyof M> & M & { ...; }'.
  Type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; checks: TestCheckImplementation<...>; }, keyof M>' is missing the following properties from type '{ suites: Record<string, any>; givens: Record<string, any>; whens: Record<string, any>; thens: Record<string, any>; checks: Record<string, any>; }': suites, givens, whens, thens, checks
/Users/adam/Code/testeranto/src/Node.ts (58,26): Cannot find name 'INodeTestInterface'. Did you mean 'ITestInterface'?
/Users/adam/Code/testeranto/src/PM/web.ts (56,12): Cannot find name 'opts'.
/Users/adam/Code/testeranto/src/PM/web.ts (57,57): Cannot find name 'opts'.
/Users/adam/Code/testeranto/src/PM/web.ts (59,7): Cannot find name 'page'. Did you mean the instance member 'this.page'?