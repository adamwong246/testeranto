[
  {
    "filePath": "/Users/adam/Code/testeranto/src/lib/pmProxy.test/implementation.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-explicit-any",
        "severity": 2,
        "message": "Unexpected any. Specify a different type.",
        "line": 29,
        "column": 28,
        "nodeType": "TSAnyKeyword",
        "messageId": "unexpectedAny",
        "endLine": 29,
        "endColumn": 31,
        "suggestions": [
          {
            "messageId": "suggestUnknown",
            "fix": {
              "range": [
                840,
                843
              ],
              "text": "unknown"
            },
            "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
          },
          {
            "messageId": "suggestNever",
            "fix": {
              "range": [
                840,
                843
              ],
              "text": "never"
            },
            "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
          }
        ]
      },
      {
        "ruleId": "no-case-declarations",
        "severity": 2,
        "message": "Unexpected lexical declaration in case block.",
        "line": 34,
        "column": 15,
        "nodeType": "VariableDeclaration",
        "messageId": "unexpected",
        "endLine": 35,
        "endColumn": 52,
        "suggestions": [
          {
            "messageId": "addBrackets",
            "fix": {
              "range": [
                944,
                1600
              ],
              "text": "{ const content = expectedPath.includes('content') ? \n                \"test content\" : \"default content\";\n              proxiedPm.writeFileSync(\n                expectedPath.includes('empty') ? \"\" : \n                expectedPath.includes('nested') ? \"nested/folder/test.txt\" :\n                expectedPath.includes('spaces') ? \"file with spaces.txt\" :\n                expectedPath.includes('invalid') ? \"../invalid.txt\" :\n                \"test.txt\", \n                content\n              );\n              actualPath = mockPm.getLastCall(\"writeFileSync\")?.path;\n              actualContent = mockPm.getLastCall(\"writeFileSync\")?.content;\n              break; }"
            },
            "desc": "Add {} brackets around the case block."
          }
        ]
      },
      {
        "ruleId": "@typescript-eslint/no-explicit-any",
        "severity": 2,
        "message": "Unexpected any. Specify a different type.",
        "line": 90,
        "column": 38,
        "nodeType": "TSAnyKeyword",
        "messageId": "unexpectedAny",
        "endLine": 90,
        "endColumn": 41,
        "suggestions": [
          {
            "messageId": "suggestUnknown",
            "fix": {
              "range": [
                2921,
                2924
              ],
              "text": "unknown"
            },
            "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
          },
          {
            "messageId": "suggestNever",
            "fix": {
              "range": [
                2921,
                2924
              ],
              "text": "never"
            },
            "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
          }
        ]
      },
      {
        "ruleId": "@typescript-eslint/no-explicit-any",
        "severity": 2,
        "message": "Unexpected any. Specify a different type.",
        "line": 90,
        "column": 55,
        "nodeType": "TSAnyKeyword",
        "messageId": "unexpectedAny",
        "endLine": 90,
        "endColumn": 58,
        "suggestions": [
          {
            "messageId": "suggestUnknown",
            "fix": {
              "range": [
                2938,
                2941
              ],
              "text": "unknown"
            },
            "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
          },
          {
            "messageId": "suggestNever",
            "fix": {
              "range": [
                2938,
                2941
              ],
              "text": "never"
            },
            "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
          }
        ]
      }
    ],
    "suppressedMessages": [],
    "errorCount": 4,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/adam/Code/testeranto/src/lib/pmProxy.test/index.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-empty-object-type",
        "severity": 2,
        "message": "The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.",
        "line": 11,
        "column": 33,
        "nodeType": "TSTypeLiteral",
        "messageId": "noEmptyObject",
        "endLine": 11,
        "endColumn": 35,
        "suggestions": [
          {
            "messageId": "replaceEmptyObjectType",
            "data": {
              "replacement": "object"
            },
            "fix": {
              "range": [
                353,
                355
              ],
              "text": "object"
            },
            "desc": "Replace `{}` with `object`."
          },
          {
            "messageId": "replaceEmptyObjectType",
            "data": {
              "replacement": "unknown"
            },
            "fix": {
              "range": [
                353,
                355
              ],
              "text": "unknown"
            },
            "desc": "Replace `{}` with `unknown`."
          }
        ]
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/adam/Code/testeranto/src/lib/pmProxy.test/interface.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 2,
        "message": "'initializer' is defined but never used.",
        "line": 11,
        "column": 31,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 11,
        "endColumn": 42
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 2,
        "message": "'testResource' is defined but never used.",
        "line": 11,
        "column": 44,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 11,
        "endColumn": 56
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 2,
        "message": "'initialValues' is defined but never used.",
        "line": 11,
        "column": 58,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 11,
        "endColumn": 71
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 2,
        "message": "'pm' is defined but never used.",
        "line": 11,
        "column": 73,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 11,
        "endColumn": 75
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 2,
        "message": "'key' is defined but never used.",
        "line": 33,
        "column": 28,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 33,
        "endColumn": 31
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 2,
        "message": "'pm' is defined but never used.",
        "line": 33,
        "column": 33,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 33,
        "endColumn": 35
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 2,
        "message": "'store' is defined but never used.",
        "line": 34,
        "column": 20,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 34,
        "endColumn": 25
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 2,
        "message": "'pm' is defined but never used.",
        "line": 34,
        "column": 27,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 34,
        "endColumn": 29
      }
    ],
    "suppressedMessages": [],
    "errorCount": 8,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/adam/Code/testeranto/src/lib/pmProxy.test/specification.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 2,
        "message": "'Check' is defined but never used.",
        "line": 9,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 9,
        "endColumn": 8
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  }
]