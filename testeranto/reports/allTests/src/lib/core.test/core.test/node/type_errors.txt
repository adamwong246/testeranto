/Users/adam/Code/testeranto/src/lib/basebuilder.ts (85,15): This expression is not callable.
  Not all constituents of type 'void | ((fPath: string, value: string | Buffer<ArrayBufferLike> | PassThrough) => void)' are callable.
    Type 'void' has no call signatures.
/Users/adam/Code/testeranto/src/lib/classBuilder.ts (90,18): A spread argument must either have a tuple type or be passed to a rest parameter.
/Users/adam/Code/testeranto/src/lib/classBuilder.ts (105,28): A spread argument must either have a tuple type or be passed to a rest parameter.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.implementation.ts (18,9): Cannot find name 'specification'.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.implementation.ts (20,11): Type 'never[]' is not assignable to type 'number'.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.implementation.ts (21,9): Cannot find name 'testInterface'.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.implementation.ts (28,9): Cannot find name 'specification'.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.implementation.ts (30,11): Type 'never[]' is not assignable to type 'number'.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.implementation.ts (31,9): Cannot find name 'testInterface'.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.implementation.ts (38,9): Cannot find name 'specification'.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.implementation.ts (41,9): Cannot find name 'testInterface'.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.implementation.ts (48,9): Cannot find name 'specification'.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.implementation.ts (50,11): Type 'never[]' is not assignable to type 'number'.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.implementation.ts (51,13): Cannot find name 'testInterface'.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.implementation.ts (107,20): Property 'testInterface' does not exist on type 'MockCore<any, any, any>'.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.implementation.ts (116,30): Type '(builder: MockCore<any, any, any>) => Promise<MockCore<any, any, any>>' is not assignable to type '(builder: MockCore<any, any, any>) => MockCore<any, any, any>'.
  Type 'Promise<MockCore<any, any, any>>' is missing the following properties from type 'MockCore<any, any, any>': receiveTestResourceConfig, specs, assertThis, testResourceRequirement, and 15 more.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.implementation.ts (127,20): Type 'PassThrough' is not assignable to type '() => MockCore<any, any, any>'.
  Type 'Transform' provides no match for the signature '(): MockCore<any, any, any>'.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.interface.ts (5,3): Type '(subject: import("/Users/adam/Code/testeranto/src/lib/core.test/MockCore").MockCore<any, any, any>, initializer: (c?: any) => () => import("/Users/adam/Code/testeranto/src/lib/core.test/MockCore").MockCore<any, any, any>, testResource: import("/Users/adam/Code/testeranto/src/lib/index").ITTestResourceConfiguration, ...' is not assignable to type '(subject: import("/Users/adam/Code/testeranto/src/lib/core.test/MockCore").MockCore<any, any, any>, initializer: (c?: any) => () => import("/Users/adam/Code/testeranto/src/lib/core.test/MockCore").MockCore<any, any, any>, testResource: import("/Users/adam/Code/testeranto/src/lib/index").ITTestResourceConfiguration, ...'. Two different types with this name exist, but they are unrelated.
  Type 'Promise<() => MockCore<any, any, any>>' is not assignable to type 'Promise<MockCore<any, any, any>>'.
    Type '() => MockCore<any, any, any>' is not assignable to type 'MockCore<any, any, any>'.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.interface.ts (9,26): Expected 1 arguments, but got 2.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.interface.ts (12,26): Expected 1 arguments, but got 2.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.interface.ts (14,25): Type 'MockCore<any, any, any>' is missing the following properties from type 'Promise<unknown>': then, catch, finally, [Symbol.toStringTag]
/Users/adam/Code/testeranto/src/lib/core.test/core.test.specification.ts (21,42): Expected 4 arguments, but got 3.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.specification.ts (28,31): Expected 4 arguments, but got 3.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.specification.ts (33,32): Expected 4 arguments, but got 3.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.specification.ts (76,17): Property 'specsModified' does not exist on type 'ThenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.specification.ts (87,27): Property 'WithCustomImplementation' does not exist on type 'GivenSpecification<I, O>'.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.specification.ts (89,16): Cannot find name 'implementation'. Did you mean 'DOMImplementation'?
/Users/adam/Code/testeranto/src/lib/core.test/core.test.ts (14,3): Expected 4-5 arguments, but got 6.
/Users/adam/Code/testeranto/src/lib/core.test/core.test.types.ts (26,27): Identifier expected. 'interface' is a reserved word in strict mode. Modules are automatically in strict mode.
/Users/adam/Code/testeranto/src/lib/core.test/MockCore.ts (24,56): Type 'never[]' is not assignable to type 'number'.
/Users/adam/Code/testeranto/src/lib/core.test/MockCore.ts (31,7): Argument of type 'ITestImplementation<I, O, M>' is not assignable to parameter of type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; checks: TestCheckImplementation<...>; }, keyof M> & M & { ...; }'.
  Type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; checks: TestCheckImplementation<...>; }, keyof M>' is missing the following properties from type '{ suites: Record<string, any>; givens: Record<string, any>; whens: Record<string, any>; thens: Record<string, any>; checks: Record<string, any>; }': suites, givens, whens, thens, checks
/Users/adam/Code/testeranto/src/lib/index.ts (22,3): Type '(subject: T["isubject"], initialValues: T["iinitialValues"], x: unknown, testResource: ITTestResourceConfiguration, pm: IPM) => Promise<T["isubject"]>' is not assignable to type '(subject: T["isubject"], initializer: (c?: any) => T["given"], testResource: ITTestResourceConfiguration, initialValues: any, pm: IPM) => Promise<...>'.
  Types of parameters 'initialValues' and 'initializer' are incompatible.
    Type '(c?: any) => T["given"]' is not assignable to type 'T["iinitialValues"]'.
      'T["iinitialValues"]' could be instantiated with an arbitrary type which could be unrelated to '(c?: any) => T["given"]'.
/Users/adam/Code/testeranto/src/lib/index.ts (24,20): Type '"iinitialValues"' cannot be used to index type 'T'.
/Users/adam/Code/testeranto/src/lib/index.ts (46,13): This expression is not callable.
  Type 'unknown' has no call signatures.
/Users/adam/Code/testeranto/src/lib/index.ts (58,3): Type '{ assertThis?: ((x: T["then"]) => any) | undefined; andWhen?: ((store: T["istore"], whenCB: T["when"], testResource: ITTestResourceConfiguration, pm: IPM) => Promise<T["istore"]>) | undefined; ... 4 more ...; beforeEach?: ((subject: T["isubject"], initializer: (c?: any) => T["given"], testResource: ITTestResourceCon...' is not assignable to type 'ITestInterface<T>'.
  Types of property 'assertThis' are incompatible.
    Type '((x: T["then"]) => any) | undefined' is not assignable to type '(x: T["then"]) => any'.
      Type 'undefined' is not assignable to type '(x: T["then"]) => any'.
/Users/adam/Code/testeranto/src/PM/web.ts (56,12): Cannot find name 'opts'.
/Users/adam/Code/testeranto/src/PM/web.ts (57,57): Cannot find name 'opts'.
/Users/adam/Code/testeranto/src/PM/web.ts (59,7): Cannot find name 'page'. Did you mean the instance member 'this.page'?
/Users/adam/Code/testeranto/src/Pure.ts (32,7): Argument of type 'ITestImplementation<I, O, M>' is not assignable to parameter of type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; checks: TestCheckImplementation<...>; }, keyof M> & M & { ...; }'.
  Type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; checks: TestCheckImplementation<...>; }, keyof M>' is missing the following properties from type '{ suites: Record<string, any>; givens: Record<string, any>; whens: Record<string, any>; thens: Record<string, any>; checks: Record<string, any>; }': suites, givens, whens, thens, checks