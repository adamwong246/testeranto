[
  {
    "filePath": "/Users/adam/Code/testeranto/src/Pure.test.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-explicit-any",
        "severity": 2,
        "message": "Unexpected any. Specify a different type.",
        "line": 22,
        "column": 26,
        "nodeType": "TSAnyKeyword",
        "messageId": "unexpectedAny",
        "endLine": 22,
        "endColumn": 29,
        "suggestions": [
          {
            "messageId": "suggestUnknown",
            "fix": {
              "range": [
                716,
                719
              ],
              "text": "unknown"
            },
            "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
          },
          {
            "messageId": "suggestNever",
            "fix": {
              "range": [
                716,
                719
              ],
              "text": "never"
            },
            "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
          }
        ]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 2,
        "message": "'result' is assigned a value but never used.",
        "line": 91,
        "column": 13,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 91,
        "endColumn": 19
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 2,
        "message": "'Check' is defined but never used.",
        "line": 141,
        "column": 50,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 141,
        "endColumn": 55
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 2,
        "message": "'input' is defined but never used.",
        "line": 289,
        "column": 21,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 289,
        "endColumn": 26
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 2,
        "message": "'testResource' is defined but never used.",
        "line": 289,
        "column": 28,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 289,
        "endColumn": 40
      },
      {
        "ruleId": "@typescript-eslint/no-empty-object-type",
        "severity": 2,
        "message": "The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.",
        "line": 294,
        "column": 45,
        "nodeType": "TSTypeLiteral",
        "messageId": "noEmptyObject",
        "endLine": 294,
        "endColumn": 47,
        "suggestions": [
          {
            "messageId": "replaceEmptyObjectType",
            "data": {
              "replacement": "object"
            },
            "fix": {
              "range": [
                8658,
                8660
              ],
              "text": "object"
            },
            "desc": "Replace `{}` with `object`."
          },
          {
            "messageId": "replaceEmptyObjectType",
            "data": {
              "replacement": "unknown"
            },
            "fix": {
              "range": [
                8658,
                8660
              ],
              "text": "unknown"
            },
            "desc": "Replace `{}` with `unknown`."
          }
        ]
      }
    ],
    "suppressedMessages": [],
    "errorCount": 6,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  }
]