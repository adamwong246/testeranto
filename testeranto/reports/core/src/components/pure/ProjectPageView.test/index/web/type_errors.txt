/Users/adam/Code/testeranto-react/src/react-dom/component/dynamic.ts (33,14): Type '(testInput: typeof Component) => { beforeAll: (subject: typeof Component, artificer: ITTestResourceConfiguration) => Promise<{ htmlElement: HTMLElement; }>; ... 5 more ...; assertThis: (x: (s: ISelection) => ISelection) => (s: ISelection) => ISelection; }' is not assignable to type '(testInput: typeof Component) => ITestAdapter<I>'.
  Call signature return types '{ beforeAll: (subject: typeof Component, artificer: ITTestResourceConfiguration) => Promise<{ htmlElement: HTMLElement; }>; ... 5 more ...; assertThis: (x: (s: ISelection) => ISelection) => (s: ISelection) => ISelection; }' and 'ITestAdapter<I>' are incompatible.
    The types returned by 'beforeAll(...)' are incompatible between these types.
      Type 'Promise<{ htmlElement: HTMLElement; }>' is not assignable to type 'Promise<ISubject>'.
        Property 'domRoot' is missing in type '{ htmlElement: HTMLElement; }' but required in type 'ISubject'.
/Users/adam/Code/testeranto-react/src/react-dom/component/dynamic.ts (47,45): Property 'subject' does not exist on type 'Readonly<{}>'.
/Users/adam/Code/testeranto-react/src/react-dom/component/dynamic.ts (114,9): Expected 1 arguments, but got 3.
/Users/adam/Code/testeranto-react/src/react/component/index.ts (21,3): Type '{ beforeEach: () => Promise<CElement<any, any>>; andWhen: (s: CElement<any, any>, whenCB: () => (s: CElement<any, any>) => any) => any; }' is missing the following properties from type 'ITestAdapter<I>': assertThis, butThen, afterAll, afterEach, beforeAll
/Users/adam/Code/testeranto/src/components/pure/NavBar.tsx (87,21): Type '{ children: (ReactNode | Element)[]; key: number; as: "div" | ForwardRefExoticComponent<LinkProps & RefAttributes<HTMLAnchorElement>>; to: string | undefined; active: boolean | undefined; className: string; title: string | undefined; }' is not assignable to type 'IntrinsicAttributes & Omit<(Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & { ...; }) | (LinkProps & RefAttributes<...>), BsPrefixProps<...> & NavLinkProps> & BsPrefixProps<...> & NavLinkProps & { ...; }'.
  Property 'to' does not exist on type 'IntrinsicAttributes & Omit<(Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & { ...; }) | (LinkProps & RefAttributes<...>), BsPrefixProps<...> & NavLinkProps> & BsPrefixProps<...> & NavLinkProps & { ...; }'.
/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/implementation.tsx (10,3): Property 'Navigation' is missing in type '{ Default: () => { summary: { "test-suite-1": { testsExist: boolean; runTimeErrors: number; typeErrors: number; staticErrors: number; }; "test-suite-2": { testsExist: boolean; runTimeErrors: number; typeErrors: number; staticErrors: number; }; }; ... 14 more ...; domRoot: any; }; WithError: () => { ...; }; }' but required in type '{ Default: (...args: any[]) => IProjectPageViewProps; WithError: (...args: any[]) => IProjectPageViewProps; Navigation: (...args: any[]) => IProjectPageViewProps; }'.
/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/implementation.tsx (138,37): Property 'htmlElement' does not exist on type 'IProjectPageViewProps & { container?: HTMLElement | undefined; }'.
/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/implementation.tsx (147,37): Property 'htmlElement' does not exist on type 'IProjectPageViewProps & { container?: HTMLElement | undefined; }'.
/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/implementation.tsx (156,37): Property 'htmlElement' does not exist on type 'IProjectPageViewProps & { container?: HTMLElement | undefined; }'.
/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/implementation.tsx (165,37): Property 'htmlElement' does not exist on type 'IProjectPageViewProps & { container?: HTMLElement | undefined; }'.
/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/implementation.tsx (174,37): Property 'htmlElement' does not exist on type 'IProjectPageViewProps & { container?: HTMLElement | undefined; }'.
/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/implementation.tsx (177,24): 'el' is of type 'unknown'.
/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/implementation.tsx (185,37): Property 'htmlElement' does not exist on type 'IProjectPageViewProps & { container?: HTMLElement | undefined; }'.
/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/implementation.tsx (188,24): 'el' is of type 'unknown'.
/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/implementation.tsx (195,37): Property 'htmlElement' does not exist on type 'IProjectPageViewProps & { container?: HTMLElement | undefined; }'.
/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/implementation.tsx (205,5): Type '(name: string) => (state: any, pm: any) => Promise<any>' is not assignable to type '(...args: any[]) => (state: IProjectPageViewProps & { container?: HTMLElement | undefined; }) => IProjectPageViewProps & { ...; }'.
  Type '(state: any, pm: any) => Promise<any>' is not assignable to type '(state: IProjectPageViewProps & { container?: HTMLElement | undefined; }) => IProjectPageViewProps & { container?: HTMLElement | undefined; }'.
    Target signature provides too few arguments. Expected 2 or more, but got 1.
/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/index.tsx (16,3): Argument of type 'import("/Users/adam/Code/testeranto/src/CoreTypes").ITestSpecification<import("/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/types").I, import("/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/types").O>' is not assignable to parameter of type 'import("/Users/adam/Code/testeranto/src/CoreTypes").ITestSpecification<import("/Users/adam/Code/testeranto-react/src/react-dom/component/dynamic").I, import("/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/types").O>'.
  Types of parameters 'Suite' and 'Suite' are incompatible.
    Type 'import("/Users/adam/Code/testeranto/src/Types").SuiteSpecification<import("/Users/adam/Code/testeranto-react/src/react-dom/component/dynamic").I, import("/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/types").O>' is not assignable to type 'import("/Users/adam/Code/testeranto/src/Types").SuiteSpecification<import("/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/types").I, import("/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/types").O>'.
      Types of property 'Default' are incompatible.
        Type '(name: string, givens: import("/Users/adam/Code/testeranto/src/lib/abstractBase").IGivens<import("/Users/adam/Code/testeranto-react/src/react-dom/component/dynamic").I>) => import("/Users/adam/Code/testeranto/src/lib/BaseSuite").BaseSuite<...>' is not assignable to type '(name: string, givens: import("/Users/adam/Code/testeranto/src/lib/abstractBase").IGivens<import("/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/types").I>) => import("/Users/adam/Code/testeranto/src/lib/BaseSuite").BaseSuite<...>'.
          Types of parameters 'givens' and 'givens' are incompatible.
            Type 'import("/Users/adam/Code/testeranto/src/lib/abstractBase").IGivens<import("/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/types").I>' is not assignable to type 'import("/Users/adam/Code/testeranto/src/lib/abstractBase").IGivens<import("/Users/adam/Code/testeranto-react/src/react-dom/component/dynamic").I>'.
              Type 'import("/Users/adam/Code/testeranto/src/components/pure/ProjectPageView.test/types").I' is not assignable to type 'import("/Users/adam/Code/testeranto-react/src/react-dom/component/dynamic").I'.
                Types of property 'iinput' are incompatible.
                  Property 'prototype' is missing in type 'IProjectPageViewProps' but required in type 'typeof Component'.
/Users/adam/Code/testeranto/src/lib/abstractBase.ts (328,41): A spread argument must either have a tuple type or be passed to a rest parameter.
/Users/adam/Code/testeranto/src/lib/basebuilder.ts (76,49): Function lacks ending return statement and return type does not include 'undefined'.
/Users/adam/Code/testeranto/src/lib/basebuilder.ts (123,15): Expected 1 arguments, but got 3.
/Users/adam/Code/testeranto/src/lib/core.ts (48,7): Argument of type 'Omit<{ suites: import("/Users/adam/Code/testeranto/src/Types").TestSuiteImplementation<O>; givens: import("/Users/adam/Code/testeranto/src/Types").TestGivenImplementation<I, O>; whens: import("/Users/adam/Code/testeranto/src/Types").TestWhenImplementation<...>; thens: import("/Users/adam/Code/testeranto/src/Types")....' is not assignable to parameter of type 'Omit<{ suites: import("/Users/adam/Code/testeranto/src/Types").TestSuiteImplementation<O>; givens: import("/Users/adam/Code/testeranto/src/Types").TestGivenImplementation<I, O>; whens: import("/Users/adam/Code/testeranto/src/Types").TestWhenImplementation<...>; thens: import("/Users/adam/Code/testeranto/src/Types")....'.
  Type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; }, keyof M> & M & { ...; }' is not assignable to type '{ suites: Record<string, never>; givens: Record<string, any>; whens: Record<string, any>; thens: Record<string, any>; }'.
    Types of property 'suites' are incompatible.
      Type 'Record<string, any>' is not assignable to type 'Record<string, never>'.
        'string' index signatures are incompatible.
          Type 'any' is not assignable to type 'never'.
/Users/adam/Code/testeranto/src/lib/index.ts (36,12): This expression is not callable.
  Type 'unknown' has no call signatures.
/Users/adam/Code/testeranto/src/lib/index.ts (44,12): This expression is not callable.
  Type 'unknown' has no call signatures.
/Users/adam/Code/testeranto/src/PM/web.ts (59,12): Property 'mainFrame' does not exist on type 'string | Page'.
  Property 'mainFrame' does not exist on type 'string'.
/Users/adam/Code/testeranto/src/Web.ts (43,7): Argument of type 'ITestImplementation<I, O, M>' is not assignable to parameter of type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; }, keyof M> & M & { ...; }'.
  Type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; }, keyof M>' is missing the following properties from type '{ suites: Record<string, any>; givens: Record<string, any>; whens: Record<string, any>; thens: Record<string, any>; }': suites, givens, whens, thens