/Users/adam/Code/testeranto/src/lib/basebuilder.ts (78,49): Function lacks ending return statement and return type does not include 'undefined'.
/Users/adam/Code/testeranto/src/lib/basebuilder.ts (125,15): Expected 1 arguments, but got 3.
/Users/adam/Code/testeranto/src/lib/BaseThen.ts (76,41): A spread argument must either have a tuple type or be passed to a rest parameter.
/Users/adam/Code/testeranto/src/lib/core.ts (50,7): Argument of type 'Omit<{ suites: import("/Users/adam/Code/testeranto/src/Types").TestSuiteImplementation<O>; givens: import("/Users/adam/Code/testeranto/src/Types").TestGivenImplementation<I, O>; whens: import("/Users/adam/Code/testeranto/src/Types").TestWhenImplementation<...>; thens: import("/Users/adam/Code/testeranto/src/Types")....' is not assignable to parameter of type 'Omit<{ suites: import("/Users/adam/Code/testeranto/src/Types").TestSuiteImplementation<O>; givens: import("/Users/adam/Code/testeranto/src/Types").TestGivenImplementation<I, O>; whens: import("/Users/adam/Code/testeranto/src/Types").TestWhenImplementation<...>; thens: import("/Users/adam/Code/testeranto/src/Types")....'.
  Type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; }, keyof M> & M & { ...; }' is not assignable to type '{ suites: Record<string, never>; givens: Record<string, any>; whens: Record<string, any>; thens: Record<string, any>; }'.
    Types of property 'suites' are incompatible.
      Type 'Record<string, any>' is not assignable to type 'Record<string, never>'.
        'string' index signatures are incompatible.
          Type 'any' is not assignable to type 'never'.
/Users/adam/Code/testeranto/src/lib/index.ts (42,12): This expression is not callable.
  Type 'unknown' has no call signatures.
/Users/adam/Code/testeranto/src/lib/index.ts (50,12): This expression is not callable.
  Type 'unknown' has no call signatures.
/Users/adam/Code/testeranto/src/PM/web.ts (59,12): Property 'mainFrame' does not exist on type 'string | Page'.
  Property 'mainFrame' does not exist on type 'string'.
/Users/adam/Code/testeranto/src/Pure.test.ts (58,5): Type '() => { pm: IPM; config: {}; proxies: { butThenProxy: (pm: IPM, path: string) => { writeFileSync: (p: string, c: string) => any; testResourceConfiguration: ITTestResourceConfiguration; client: Socket; server: any; } | { ...; } | { ...; }; andWhenProxy: (pm: IPM, path: string) => { ...; } | ... 1 more ... | { ...; };...' is not assignable to type '() => () => { pm: IPM; config: {}; proxies: any; }'.
  Type '{ pm: IPM; config: {}; proxies: { butThenProxy: (pm: IPM, path: string) => { writeFileSync: (p: string, c: string) => any; testResourceConfiguration: ITTestResourceConfiguration; client: Socket; server: any; } | { ...; } | { ...; }; andWhenProxy: (pm: IPM, path: string) => { ...; } | ... 1 more ... | { ...; }; befor...' is not assignable to type '() => { pm: IPM; config: {}; proxies: any; }'.
    Type '{ pm: IPM; config: {}; proxies: { butThenProxy: (pm: IPM, path: string) => { writeFileSync: (p: string, c: string) => any; testResourceConfiguration: ITTestResourceConfiguration; client: Socket; server: any; } | { ...; } | { ...; }; andWhenProxy: (pm: IPM, path: string) => { ...; } | ... 1 more ... | { ...; }; befor...' provides no match for the signature '(): { pm: IPM; config: {}; proxies: any; }'.
/Users/adam/Code/testeranto/src/Pure.test.ts (88,5): Type '(proxyType: string) => (store: { pm: IPM; }, tr: ITTestResourceConfiguration, utils: PM) => Promise<{ pm: IPM; } | { largePayload: boolean; pm: IPM; }>' is not assignable to type '(Iw_0: string) => (zel: { pm: IPM; }, tr: ITTestResourceConfiguration, utils: PM) => Promise<(store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }>'.
  Call signature return types '(store: { pm: IPM; }, tr: ITTestResourceConfiguration, utils: PM) => Promise<{ pm: IPM; } | { largePayload: boolean; pm: IPM; }>' and '(zel: { pm: IPM; }, tr: ITTestResourceConfiguration, utils: PM) => Promise<(store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }>' are incompatible.
    Type 'Promise<{ pm: IPM; } | { largePayload: boolean; pm: IPM; }>' is not assignable to type 'Promise<(store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }>'.
      Type '{ pm: IPM; } | { largePayload: boolean; pm: IPM; }' is not assignable to type '(store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
        Type '{ pm: IPM; }' is not assignable to type '(store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
          Type '{ pm: IPM; }' provides no match for the signature '(store: { [key: string]: any; pm: IPM; }): { [key: string]: any; pm: IPM; }'.
/Users/adam/Code/testeranto/src/Pure.test.ts (120,5): Type '(artifact: Promise<string>) => (store: { pm: IPM; }) => Promise<{ artifacts: any[]; pm: IPM; }>' is not assignable to type '(Iw_0: Promise<string>) => (zel: { pm: IPM; }, tr: ITTestResourceConfiguration, utils: PM) => Promise<(store: { [key: string]: any; pm: IPM; }) => { ...; }>'.
  Call signature return types '(store: { pm: IPM; }) => Promise<{ artifacts: any[]; pm: IPM; }>' and '(zel: { pm: IPM; }, tr: ITTestResourceConfiguration, utils: PM) => Promise<(store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }>' are incompatible.
    Type 'Promise<{ artifacts: any[]; pm: IPM; }>' is not assignable to type 'Promise<(store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }>'.
      Type '{ artifacts: any[]; pm: IPM; }' is not assignable to type '(store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
        Type '{ artifacts: any[]; pm: IPM; }' provides no match for the signature '(store: { [key: string]: any; pm: IPM; }): { [key: string]: any; pm: IPM; }'.
/Users/adam/Code/testeranto/src/Pure.test.ts (123,31): Property 'artifacts' does not exist on type '{ pm: IPM; }'.
/Users/adam/Code/testeranto/src/Pure.test.ts (126,5): Type '(jobs: any[]) => (store: { pm: IPM; }) => Promise<{ testJobs: any[]; pm: IPM; }>' is not assignable to type '(Iw_0: any[]) => (zel: { pm: IPM; }, tr: ITTestResourceConfiguration, utils: PM) => Promise<(store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }>'.
  Call signature return types '(store: { pm: IPM; }) => Promise<{ testJobs: any[]; pm: IPM; }>' and '(zel: { pm: IPM; }, tr: ITTestResourceConfiguration, utils: PM) => Promise<(store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }>' are incompatible.
    Type 'Promise<{ testJobs: any[]; pm: IPM; }>' is not assignable to type 'Promise<(store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }>'.
      Type '{ testJobs: any[]; pm: IPM; }' is not assignable to type '(store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
        Type '{ testJobs: any[]; pm: IPM; }' provides no match for the signature '(store: { [key: string]: any; pm: IPM; }): { [key: string]: any; pm: IPM; }'.
/Users/adam/Code/testeranto/src/Pure.test.ts (132,5): Type '(modifier: (specs: any) => any[]) => (store: { pm: IPM; }) => Promise<{ specs: any[]; pm: IPM; }>' is not assignable to type '(Iw_0: (specs: any) => any[]) => (zel: { pm: IPM; }, tr: ITTestResourceConfiguration, utils: PM) => Promise<(store: { [key: string]: any; pm: IPM; }) => { ...; }>'.
  Call signature return types '(store: { pm: IPM; }) => Promise<{ specs: any[]; pm: IPM; }>' and '(zel: { pm: IPM; }, tr: ITTestResourceConfiguration, utils: PM) => Promise<(store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }>' are incompatible.
    Type 'Promise<{ specs: any[]; pm: IPM; }>' is not assignable to type 'Promise<(store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }>'.
      Type '{ specs: any[]; pm: IPM; }' is not assignable to type '(store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
        Type '{ specs: any[]; pm: IPM; }' provides no match for the signature '(store: { [key: string]: any; pm: IPM; }): { [key: string]: any; pm: IPM; }'.
/Users/adam/Code/testeranto/src/Pure.test.ts (135,31): Property 'specs' does not exist on type '{ pm: IPM; }'.
/Users/adam/Code/testeranto/src/Pure.test.ts (141,32): Type '(store: any, tr: any, utils: any) => Promise<any>' is not assignable to type '(ssel: { pm: IPM; }, utils: PM) => (store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
  Target signature provides too few arguments. Expected 3 or more, but got 2.
/Users/adam/Code/testeranto/src/Pure.test.ts (147,27): Type '(store: any, tr: any, utils: any) => Promise<any>' is not assignable to type '(ssel: { pm: IPM; }, utils: PM) => (store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
  Target signature provides too few arguments. Expected 3 or more, but got 2.
/Users/adam/Code/testeranto/src/Pure.test.ts (150,24): Type '(store: any, tr: any, utils: any) => Promise<any>' is not assignable to type '(ssel: { pm: IPM; }, utils: PM) => (store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
  Target signature provides too few arguments. Expected 3 or more, but got 2.
/Users/adam/Code/testeranto/src/Pure.test.ts (153,29): Type '(store: any, tr: any, utils: any) => Promise<any>' is not assignable to type '(ssel: { pm: IPM; }, utils: PM) => (store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
  Target signature provides too few arguments. Expected 3 or more, but got 2.
/Users/adam/Code/testeranto/src/Pure.test.ts (156,30): Type '(store: any, tr: any, utils: any) => Promise<any>' is not assignable to type '(ssel: { pm: IPM; }, utils: PM) => (store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
  Target signature provides too few arguments. Expected 3 or more, but got 2.
/Users/adam/Code/testeranto/src/Pure.test.ts (159,5): Type '(expectedCount: number) => (store: any, tr: any, utils: any) => Promise<any>' is not assignable to type '(It_0: number) => (ssel: { pm: IPM; }, utils: PM) => (store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
  Type '(store: any, tr: any, utils: any) => Promise<any>' is not assignable to type '(ssel: { pm: IPM; }, utils: PM) => (store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
    Target signature provides too few arguments. Expected 3 or more, but got 2.
/Users/adam/Code/testeranto/src/Pure.test.ts (162,5): Type '(expectedPath: string) => (store: any, tr: any, utils: any) => Promise<any>' is not assignable to type '(It_0: string) => (ssel: { pm: IPM; }, utils: PM) => (store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
  Type '(store: any, tr: any, utils: any) => Promise<any>' is not assignable to type '(ssel: { pm: IPM; }, utils: PM) => (store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
    Target signature provides too few arguments. Expected 3 or more, but got 2.
/Users/adam/Code/testeranto/src/Pure.test.ts (165,26): Type '(store: any, tr: any, utils: any) => Promise<any>' is not assignable to type '(ssel: { pm: IPM; }, utils: PM) => (store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
  Target signature provides too few arguments. Expected 3 or more, but got 2.
/Users/adam/Code/testeranto/src/Pure.test.ts (168,5): Type '(expectedError: string) => (store: any, tr: any, utils: any) => Promise<any>' is not assignable to type '(It_0: string) => (ssel: { pm: IPM; }, utils: PM) => (store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
  Type '(store: any, tr: any, utils: any) => Promise<any>' is not assignable to type '(ssel: { pm: IPM; }, utils: PM) => (store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
    Target signature provides too few arguments. Expected 3 or more, but got 2.
/Users/adam/Code/testeranto/src/Pure.test.ts (171,33): Type '(store: any, tr: any, utils: any) => Promise<any>' is not assignable to type '(ssel: { pm: IPM; }, utils: PM) => (store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
  Target signature provides too few arguments. Expected 3 or more, but got 2.
/Users/adam/Code/testeranto/src/Pure.test.ts (174,31): Type '(store: any, tr: any, utils: any) => Promise<any>' is not assignable to type '(ssel: { pm: IPM; }, utils: PM) => (store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
  Target signature provides too few arguments. Expected 3 or more, but got 2.
/Users/adam/Code/testeranto/src/Pure.test.ts (177,29): Type '(store: any, tr: any, utils: any) => Promise<any>' is not assignable to type '(ssel: { pm: IPM; }, utils: PM) => (store: { [key: string]: any; pm: IPM; }) => { [key: string]: any; pm: IPM; }'.
  Target signature provides too few arguments. Expected 3 or more, but got 2.
/Users/adam/Code/testeranto/src/Pure.test.ts (315,28): Cannot find name 'ITestAdapter'.
/Users/adam/Code/testeranto/src/Pure.ts (32,7): Argument of type 'ITestImplementation<I, O, M>' is not assignable to parameter of type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; }, keyof M> & M & { ...; }'.
  Type 'Omit<{ suites: TestSuiteImplementation<O>; givens: TestGivenImplementation<I, O>; whens: TestWhenImplementation<I, O>; thens: TestThenImplementation<...>; }, keyof M>' is missing the following properties from type '{ suites: Record<string, any>; givens: Record<string, any>; whens: Record<string, any>; thens: Record<string, any>; }': suites, givens, whens, thens